<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Blitz.Redis.WebDemo</name>
    </assembly>
    <members>
        <member name="T:Blitz.Redis.WebDemo.Controllers.ValuesController">
            <summary>
            Values Demo (REDIS Cached Values)
            </summary>
        </member>
        <member name="M:Blitz.Redis.WebDemo.Controllers.ValuesController.#ctor(Microsoft.Extensions.Caching.Distributed.IDistributedCache,Microsoft.Extensions.Logging.ILogger{Blitz.Redis.WebDemo.Controllers.ValuesController})">
            <summary>
            CTOR
            </summary>
            <param name="cache">IDistributedCache</param>
            <param name="logger">ILogger</param>
        </member>
        <member name="M:Blitz.Redis.WebDemo.Controllers.ValuesController.Stash(System.String,System.String)">
            <summary>
            Stash a name, value pair
            </summary>
            <param name="name">(sic)</param>
            <param name="value">(sic)</param>
        </member>
        <member name="M:Blitz.Redis.WebDemo.Controllers.ValuesController.Fetch(System.String)">
            <summary>
            Fetch value from cache
            </summary>
            <param name="name">Name</param>
            <returns>Value</returns>
        </member>
        <member name="T:Blitz.Redis.WebDemo.Libs.AssembyInfoHelper">
            <summary>
            Helper: Assembly Info
            <para>Translates the <c>CustomAttributeData</c> to a usable string value</para>
            </summary>
        </member>
        <member name="M:Blitz.Redis.WebDemo.Libs.AssembyInfoHelper.TryParse(System.Reflection.CustomAttributeData,System.String@)">
            <summary>
            Try Parse a <c>System.Reflection.CustomAttributeData</c> into a string
            </summary>
            <param name="attribute">(this)</param>
            <param name="s">Strng to parse into</param>
            <returns>True if success</returns>
        </member>
        <member name="T:Blitz.Redis.WebDemo.Libs.GlobalExceptionFilter">
            <summary>
            Global Exception Filter
            <para>See: www.talkingdotnet.com/global-exception-handling-in-aspnet-core-webapi/</para>
            </summary>
        </member>
        <member name="F:Blitz.Redis.WebDemo.Libs.GlobalExceptionFilter._logger">
            <summary>
            Field: ILogger
            </summary>
        </member>
        <member name="M:Blitz.Redis.WebDemo.Libs.GlobalExceptionFilter.#ctor(Microsoft.Extensions.Logging.ILoggerFactory)">
            <summary>
            CTOR
            </summary>
            <param name="logger">Logger to inject</param>
        </member>
        <member name="M:Blitz.Redis.WebDemo.Libs.GlobalExceptionFilter.Dispose">
            <summary>
            Public implementation of Dispose pattern callable by consumers.
            </summary>
        </member>
        <member name="M:Blitz.Redis.WebDemo.Libs.GlobalExceptionFilter.Dispose(System.Boolean)">
            <summary>
            Protected implementation of Dispose pattern.
            </summary>
            <param name="disposing">bool</param>
        </member>
        <member name="M:Blitz.Redis.WebDemo.Libs.GlobalExceptionFilter.OnException(Microsoft.AspNetCore.Mvc.Filters.ExceptionContext)">
            <summary>
            Handle Exception
            </summary>
            <param name="context"></param>
        </member>
        <member name="T:Blitz.Redis.WebDemo.Libs.TypeSwitch">
            <summary>
            Provides for switching on type (handy for error handling)
            <para>From: http://stackoverflow.com/questions/11277036/typeswitching-in-c-sharp</para>
            </summary>
        </member>
        <member name="T:Blitz.Redis.WebDemo.Libs.TypeSwitch.CaseInfo">
            <summary>
            Case Info
            </summary>
        </member>
        <member name="P:Blitz.Redis.WebDemo.Libs.TypeSwitch.CaseInfo.IsDefault">
            <summary>
            Is Default Case
            </summary>
        </member>
        <member name="P:Blitz.Redis.WebDemo.Libs.TypeSwitch.CaseInfo.Target">
            <summary>
            Type to switch on
            </summary>
        </member>
        <member name="P:Blitz.Redis.WebDemo.Libs.TypeSwitch.CaseInfo.Action">
            <summary>
            Thing to do if this case selected
            </summary>
        </member>
        <member name="M:Blitz.Redis.WebDemo.Libs.TypeSwitch.Do(System.Object,Blitz.Redis.WebDemo.Libs.TypeSwitch.CaseInfo[])">
            <summary>
            Do the action
            </summary>
            <param name="source">Source of the action</param>
            <param name="cases">Cases</param>
        </member>
        <member name="M:Blitz.Redis.WebDemo.Libs.TypeSwitch.Case``1(System.Action)">
            <summary>
            Case Block
            </summary>
            <typeparam name="T">Type</typeparam>
            <param name="action">Action</param>
            <returns>Case Information</returns>
        </member>
        <member name="M:Blitz.Redis.WebDemo.Libs.TypeSwitch.Case``1(System.Action{``0})">
            <summary>
            Case Block (Generic)
            </summary>
            <typeparam name="T">Type</typeparam>
            <param name="action">Action</param>
            <returns>Case Information</returns>
        </member>
        <member name="M:Blitz.Redis.WebDemo.Libs.TypeSwitch.Default(System.Action)">
            <summary>
            Default Case Block
            </summary>
            <param name="action">Action</param>
            <returns>Case Information</returns>
        </member>
        <member name="T:Blitz.Redis.WebDemo.Models.BlitzAssemblyVersionMetadata">
            <summary>
            Custom Metadata For All Blitzkireg Software Micro-Service
            </summary>
        </member>
        <member name="P:Blitz.Redis.WebDemo.Models.BlitzAssemblyVersionMetadata.Copyright">
            <summary>
            Copyright
            </summary>
        </member>
        <member name="P:Blitz.Redis.WebDemo.Models.BlitzAssemblyVersionMetadata.Company">
            <summary>
            Company
            </summary>
        </member>
        <member name="P:Blitz.Redis.WebDemo.Models.BlitzAssemblyVersionMetadata.Description">
            <summary>
            Description
            </summary>
        </member>
        <member name="P:Blitz.Redis.WebDemo.Models.BlitzAssemblyVersionMetadata.SemanticVersion">
            <summary>
            Semantic Version <para>See: semver.org</para>
            </summary>
        </member>
        <member name="P:Blitz.Redis.WebDemo.Models.BlitzAssemblyVersionMetadata.FileVersion">
            <summary>
            File Version
            </summary>
        </member>
        <member name="P:Blitz.Redis.WebDemo.Models.BlitzAssemblyVersionMetadata.MajorVersion">
            <summary>
            Major version as it occurs on the path
            </summary>
        </member>
        <member name="P:Blitz.Redis.WebDemo.Models.BlitzAssemblyVersionMetadata.Product">
            <summary>
            Product
            </summary>
        </member>
        <member name="M:Blitz.Redis.WebDemo.Models.BlitzAssemblyVersionMetadata.PropertySet(System.String,System.String)">
            <summary>
            Property Set
            </summary>
            <param name="name">(sic)</param>
            <param name="value">(sic)</param>
        </member>
        <member name="T:Blitz.Redis.WebDemo.Models.ErrorPayload">
            <summary>
            Error Payload
            </summary>
        </member>
        <member name="P:Blitz.Redis.WebDemo.Models.ErrorPayload.StatusCode">
            <summary>
            HTTP Status Code
            </summary>
        </member>
        <member name="P:Blitz.Redis.WebDemo.Models.ErrorPayload.Message">
            <summary>
            Message
            </summary>
        </member>
        <member name="P:Blitz.Redis.WebDemo.Models.ErrorPayload.StackTrace">
            <summary>
            Stack Trace
            </summary>
        </member>
        <member name="P:Blitz.Redis.WebDemo.Models.ErrorPayload.Data">
            <summary>
            Additional Data
            </summary>
        </member>
        <member name="T:Blitz.Redis.WebDemo.Program">
            <summary>
            Main entry class
            </summary>
        </member>
        <member name="M:Blitz.Redis.WebDemo.Program.Main(System.String[])">
            <summary>
            CTOR
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:Blitz.Redis.WebDemo.Program.CreateHostBuilder(System.String[])">
            <summary>
            Create Host Builder
            </summary>
            <param name="args"></param>
            <returns>IHostBuilder</returns>
        </member>
        <member name="P:Blitz.Redis.WebDemo.Program.ProgramMetadata">
            <summary>
            Semantic Version, etc from Assembly Metadata
            </summary>
        </member>
        <member name="T:Blitz.Redis.WebDemo.Startup">
            <summary>
            Start up
            </summary>
        </member>
        <member name="F:Blitz.Redis.WebDemo.Startup.ApiVersion">
            <summary>
            API Version
            </summary>
        </member>
        <member name="P:Blitz.Redis.WebDemo.Startup.Configuration">
            <summary>
            Configuration Property
            </summary>
        </member>
        <member name="M:Blitz.Redis.WebDemo.Startup.#ctor(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            CTOR
            </summary>
            <param name="configuration"></param>
        </member>
        <member name="M:Blitz.Redis.WebDemo.Startup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            This method gets called by the runtime. Use this method to add services to the container.
            </summary>
            <param name="services">IServiceCollection</param>
        </member>
        <member name="M:Blitz.Redis.WebDemo.Startup.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IWebHostEnvironment)">
            <summary>
            This method gets called by the runtime. Use this method to configure the HTTP request pipeline.
            </summary>
            <param name="app">IApplicationBuilder</param>
            <param name="env">IWebHostEnvironment</param>
        </member>
    </members>
</doc>
